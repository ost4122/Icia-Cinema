SELECT * FROM USERS;
SELECT * FROM BOARD;
DROP TABLE USERS;
DROP TABLE BOARD;
DROP SEQUENCE BOARDNUM_SEQ;   
DROP VIEW BOARDLIST;
COMMIT;
ROLLBACK;
SELECT * FROM BOARD WHERE WRITER='admin';

CREATE TABLE USERS(
ID VARCHAR2(50) PRIMARY KEY,
PW VARCHAR2(50) NOT NULL,
NAME VARCHAR2(100) NOT NULL,
AGE NUMBER NOT NULL,
GENDER VARCHAR2(30) NOT NULL,
EMAIL VARCHAR2(100) NOT NULL,
PROFILEIMAGES VARCHAR2(1000)
);

CREATE TABLE BOARD(
NUM NUMBER PRIMARY KEY,
WRITER VARCHAR2(100) REFERENCES USERS(ID),
PW VARCHAR2(100) ,
SUBJECT VARCHAR2(100),
CONTENTS VARCHAR2(1000) ,
BOARDDATE DATE,
HIT NUMBER DEFAULT 0,
BOARDFILE VARCHAR2(1000)
);
SELECT * FROM BOARD ORDER BY HIT DESC;
CREATE SEQUENCE BOARDNUM_SEQ
    START WITH 1                -- 1 부터 시작(시작값)
    INCREMENT BY 1            -- 1 씩 증가   (증가값)
    NOCACHE;                    -- 임시저장공간을 사용하지않는다.

CREATE VIEW BOARDLIST AS SELECT NUM,WRITER,PW,SUBJECT,CONTENTS,BOARDDATE,HIT,BOARDFILE,
            ROW_NUMBER() OVER(ORDER BY NUM) AS RN FROM BOARD ORDER BY NUM DESC;
        
        SELECT * FROM BOARDLIST;
            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
COMMIT;
ROLLBACK;
select*from movie;
INSERT INTO MOVIE VALUES();
UPDATE MOVIE SET GRADE = GRADE+(5/GIVERATING) WHERE MOVIENUMBER=1;
UPDATE MOVIE SET GIVERATING = GIVERATING+1 WHERE MOVIENUMBER=1;
INSERT INTO MOVIE VALUES(MOVIE_SEQ.NEXTVAL,'스파이더맨',9.0,'ㅁㄴㅇ',12,120,'2019-07-15','','','',0);
DROP TABLE MOVIE;
DROP SEQUENCE MOVIE_SEQ;   
-- Movie 테이블 -- 
CREATE TABLE MOVIE(
MOVIENUMBER NUMBER PRIMARY KEY,                   -- 영화 번호
MOVIESUBJECT VARCHAR2(100) NOT NULL UNIQUE,          -- 영화 제목
GRADE NUMBER NOT NULL,                              -- 평점
DIRECTOR VARCHAR2(100) NOT NULL,                 -- 감독
FILMRATINGS NUMBER ,                                    -- 관람 등급
SHOWTIMES NUMBER NOT NULL,                         -- 상영시간
RELEASEDATE VARCHAR2(50),                                            -- 개봉일
CASTMEMBERS VARCHAR2(100),                      -- 출연진
POSTER VARCHAR2(1000),
MOVIECONTENTS VARCHAR2(1000),                   -- 영화 줄거리
MOVIETRAILER VARCHAR2(1000) 
);
INSERT INTO MOVIE VALUES(MOVIE_SEQ.NEXTVAL,'스파이더맨',9.0,'ㅁㄴㅇ',12,120,'2019-07-15','','','');

DROP TABLE MOVIE_SEQ;

DROP TABLE MOVIE;

CREATE SEQUENCE MOVIE_SEQ
    START WITH 1                -- 1 부터 시작(시작값)
    INCREMENT BY 1            -- 1 씩 증가   (증가값)
    NOCACHE;                    -- 임시저장공간을 사용하지않는다.
      
-- 댓글
CREATE TABLE CMBOARD(
CMNUMBER NUMBER NOT NULL,                                                          -- 댓글 번호
NICKNAME VARCHAR2(100) ,                                                     -- 댓글 작성자(MEMBERS NICKNAME)
MOVIENUMBER NUMBER ,                    -- 영화 번호
WRITEDATE DATE,                                                                             -- 작성일
CONTENTS VARCHAR2(800),                                                              -- 댓글 내용
COMMENTHIT NUMBER DEFAULT 0                                                     -- 댓글 추천
);

CREATE SEQUENCE COMMENT_SEQ
    START WITH 1                -- 1 부터 시작(시작값)
    INCREMENT BY 1            -- 1 씩 증가   (증가값)
    NOCACHE;                    -- 임시저장공간을 사용하지않는다.
    
    
    
    CREATE TABLE MEMBERS(
EMAIL VARCHAR2(50) PRIMARY KEY,
NICKNAME VARCHAR2(30) UNIQUE,
PASSWORD NUMBER(30),
NAME VARCHAR2(20),
BIRTH DATE,
PHONE VARCHAR2(20)

);
    CREATE TABLE CMLIKE(
    MOVIENUMBER NUMBER ,
    CMNUMBER NUMBER,
    NICKNAME VARCHAR2(30)                                                   -- 추천인
    );


SELECT*FROM MEMBERS;

CREATE VIEW CMLIKE AS SELECT CMBOARD.CMNUMBER,MOVIE.MOVIENUMBER,MEMBERS.NICKNAME,CMBOARD.WRITER,CMBOARD.COMMENTHIT
            FROM CMBOARD,MEMBERS,MOVIE;
            
DROP TABLE CMBOARD;

DROP SEQUENCE COMMENT_SEQ;         
DROP SEQUENCE movie_SEQ;         
DROP TABLE MEMBERS;
DROP TABLE MOVIE;
DROP TABLE CMLIKE;

SELECT * FROM MOVIE;
SELECT * FROM MEMBERS;
SELECT * FROM CMBOARD;
SELECT * FROM CMLIKE;


INSERT INTO CMLIKE VALUES(4,12,'오동동');

SELECT NICKNAME FROM CMLIKE WHERE CMNUMBER=12;


COMMIT;
rollback;

--공지사항
CREATE TABLE NOTICE (
NOTICENUMBER NUMBER PRIMARY KEY,
NOTICEWRITER VARCHAR2(30),
NOTICESUBJECT VARCHAR2(100),
NOTICECONTENTS VARCHAR2(1000),
NOTICEDATE DATE,
NOTICEHIT NUMBER NOT NULL,
NOTICEFILE VARCHAR2(100)
);

SELECT * FROM NOTICE;
DROP TABLE NOTICE;

COMMIT;

UPDATE NOTICE SET NOTICESUBJECT='널' WHERE NOTICENUMBER=20;


CREATE SEQUENCE NOTICENUM_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;
DROP SEQUENCE NOTICE;  
  
  CREATE VIEW NOTICELIST AS SELECT NOTICENUMBER, NOTICEWRITER, NOTICESUBJECT, NOTICECONTENTS,
          NOTICEHIT, NOTICEDATE, ROW_NUMBER() OVER(ORDER BY NOTICENUMBER DESC) AS RN
            FROM NOTICE ORDER BY NOTICENUMBER DESC;
       --VIWE는 가상테이블
       
SELECT * FROM NOTICELIST;


--자주 찾는 질문
CREATE TABLE FAQ(
FAQNUMBER NUMBER PRIMARY KEY,
FAQWRITER VARCHAR2(30),
FAQSUBJECT VARCHAR2(100),
FAQCONTENTS VARCHAR2(1000),
FAQDATE DATE,
FAQHIT NUMBER NOT NULL,
FAQFILE VARCHAR2(100)
);
SELECT * FROM FAQ;
CREATE SEQUENCE FAQNUM_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;
DROP SEQUENCE FAQ;  
  
  CREATE VIEW FAQLIST AS SELECT FAQNUMBER, FAQWRITER, FAQSUBJECT, FAQCONTENTS,
          FAQHIT, FAQDATE, ROW_NUMBER() OVER(ORDER BY FAQNUMBER DESC) AS RN
            FROM FAQ ORDER BY FAQNUMBER DESC;
       --VIWE는 가상테이블

 
